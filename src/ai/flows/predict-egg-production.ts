// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow to predict egg production based on various factors.
 *
 * - predictEggProduction - Predicts egg production using AI.
 * - PredictEggProductionInput - The input type for predictEggProduction.
 * - PredictEggProductionOutput - The output type for predictEggProduction.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PredictEggProductionInputSchema = z.object({
  duckQuantity: z.number().describe('The total number of ducks.'),
  duckAgeMonths: z.number().describe('The average age of the ducks in months.'),
  duckCondition: z.string().describe('The overall health condition of the ducks (e.g., healthy, sick).'),
  feedQuality: z.string().describe('The quality of the feed being provided (e.g., high, medium, low).'),
  housingInformation: z.string().describe('Information about the housing or kandang of the ducks'),
});
export type PredictEggProductionInput = z.infer<typeof PredictEggProductionInputSchema>;

const PredictEggProductionOutputSchema = z.object({
  predictedEggProduction: z
    .number()
    .describe('The predicted number of eggs that will be produced tomorrow.'),
  reasoning: z.string().describe('The AI reasoning behind the predicted egg production.'),
});
export type PredictEggProductionOutput = z.infer<typeof PredictEggProductionOutputSchema>;

export async function predictEggProduction(input: PredictEggProductionInput): Promise<PredictEggProductionOutput> {
  return predictEggProductionFlow(input);
}

const predictEggProductionPrompt = ai.definePrompt({
  name: 'predictEggProductionPrompt',
  input: {schema: PredictEggProductionInputSchema},
  output: {schema: PredictEggProductionOutputSchema},
  prompt: `You are an AI farm management assistant specializing in predicting egg production.

  Based on the provided information about the ducks, their condition, feed quality, and housing,
  predict the number of eggs that will be produced tomorrow and provide a brief reasoning for your prediction.

  Duck Quantity: {{{duckQuantity}}}
  Duck Age (Months): {{{duckAgeMonths}}}
  Duck Condition: {{{duckCondition}}}
  Feed Quality: {{{feedQuality}}}
  Housing Information: {{{housingInformation}}}
  
  Respond in the the following JSON format:
  {
    "predictedEggProduction": number,
    "reasoning": string
  }`,
});

const predictEggProductionFlow = ai.defineFlow(
  {
    name: 'predictEggProductionFlow',
    inputSchema: PredictEggProductionInputSchema,
    outputSchema: PredictEggProductionOutputSchema,
  },
  async input => {
    const {output} = await predictEggProductionPrompt(input);
    return output!;
  }
);
